configfile: "config/config.yaml"

""" Eventual implementation of wine/docker use of convert.exe
rule raw_to_mzml:
	input:
		"data/raw/{timepoint}.RAW"
	output:
		"data/mzml/{timepoint}.mzML"
	script:
		script to run docker/wine env for msconvert.exe
"""
rule all:
	input:
		"resources/library_info/library_info.csv"

rule isotopes_to_info_csv:
	input:
		#.isotopes files must be made in windows, but only need to be made for undeuterated MS runs
		"resources/isotopes/{undeut_fn}.peaks.isotopes",
		"resources/library_info/new_HX_order.csv"
	output:
		"resources/library_info/{undeut_fn}_intermediate.csv",
		"results/plots/preprocessing/{undeut_fn}_original_mz.pdf",
		"results/plots/preprocessing/{undeut_fn}_adjusted_mz.pdf"
	script:
		"scripts/preprocessing/undeuterated_imtbx_reader.py"

rule modify_mzmls_for_random_access:
	input:
		"resources/mzml/{mzml}"
	output:
		"resources/{mzml}.gz"
	script:
		"scripts/preprocessing/gzip_mzml.py"

rule make_ims_tics:
	#calculates total ionic current of an MS run at each LC retention timepoint, to be used by make_master_list.py
	input:
		"resources/mzml/{mzml}"
	output:
		"resources/tics/{mzml}.ims.mz.tic"
	script:
		"scripts/preprocessing/make_ims_mz_tics.py"

#make flat list of all MS datafiles
all_timepoint_files = []
for key in config['timepoints']:
	for file in config[key]:
		all_timepoint_files.append(file)

rule make_library_master_list:
	input:
		"resources/library_info/new_HX_order.csv",
		expand("resources/mzml/{mzml}", mzml=all_timepoint_files[0]),
		expand("resources/library_info/{undeut_fn}_intermediate.csv", undeut_fn=config[0]),
		expand("resources/tics/{mzml}.ims.mz.tic", mzml=all_timepoint_files)
	output:
		"results/plots/preprocessing/stretched_times_plots.pdf",
		"resources/library_info/library_info.csv"
	script:
		"scripts/preprocessing/make_library_master_list.py"
